openapi: 3.0.0
info:
  title: toDoctor API
  description: toDoctor API in Swagger
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.0
servers:
  - url: http://127.0.0.1/
tags:
  - name: auth
    description: Авторизация
  - name: user
    description: Пользователь
  - name: doctors
    description: Врачи
  - name: admin
    description: админ-панель
paths:
  /auth/logic/auth:
    post:
      tags:
        - auth
      summary: Авторизация пользователя через Telegram
      description: Создание пользователя в базе данных с данными из Telegram
      operationId: authUser
      requestBody:
        description: Add user to system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth'
          application/xml:
            schema:
              $ref: '#/components/schemas/auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth'
            application/xml:
              schema:
                $ref: '#/components/schemas/auth'
        '400':
          description: bad request
  /auth/logic/logout:
    get:
      summary: Выход пользователя из аккаунта
      operationId: userLogout
      responses:
        default:
          description: success
      tags:
        - auth
  /user/profile/:
    get:
      tags:
        - user
      summary: Получение данных о пользователе
      description: Рендер пользовательского профиля
      operationId: getUserInfo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/xml:
              schema:
                $ref: '#/components/schemas/user'
        '400':
          description: access denied
    delete:
      tags:
        - user
      summary: Удаление записи к врачу
      responses:
        '200':
          description: successful operation
  /user/enrolls:
    get:
      tags:
        - user
      summary: Получение данных записей пользователя
      description: Рендер пользовательских записей
      operationId: getUserEnrolls
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enrolls'
            application/xml:
              schema:
                $ref: '#/components/schemas/enrolls'
        '400':
          description: access denied
  /enroll/doctors/:
    get:
      tags:
        - doctors
      summary: Получение информации из базы данных о врачах
      description: Рендер таблицы с доступными для записи врачами
      operationId: getDoctors
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/doctors'
            application/xml:
              schema:
                $ref: '#/components/schemas/doctors'
        '400':
          description: Не удалось загрузить информацию о записях
  /enroll/enroll/:
    get:
      tags:
        - doctors
      summary: Получение информации из базы данных о конкретном враче
      description: Рендер таблицы с доступными для записи врачами
      operationId: getDoctorInfo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/doctor'
            application/xml:
              schema:
                $ref: '#/components/schemas/doctor'
    post:
      tags:
        - doctors
      summary: Запись к врачу
      description: Запись к врачу
      operationId: enrollDoctor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addEnroll'
          application/xml:
            schema:
              $ref: '#/components/schemas/addEnroll'
      responses:
        '200':
          description: successful operation
        '400':
          description: access denied
  /admin/users/:
    summary: Все пользователи
    description: Пользователи
    get:
      tags:
        - admin
      summary: Админ-панель
      description: Получение информации о пользователях
      operationId: getUsersInfo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
            application/xml:
              schema:
                $ref: '#/components/schemas/users'
  /admin/users/{userID}:
    summary: Все пользователи
    description: Пользователи
    delete:
      tags:
        - admin
      summary: Удаление пользователя по его ID
      operationId: deleteUser
      parameters:
        - name: userID
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
        '400':
          description: access denied
    put:
      tags:
        - admin
      summary: Изменение прав пользователя
      operationId: putUser
      parameters:
        - name: userID
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
        '400':
          description: access denied
  /admin/doctors/{doctor_id}:
    summary: Все врачи
    description: Врачи
    delete:
      tags:
        - admin
      summary: Удаление врача по его ID
      operationId: deleteDoctor
      parameters:
        - name: doctor_id
          in: path
          description: ID врача
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
        '400':
          description: access denied
    put:
      tags:
        - admin
      summary: Обновление профиля врача по его ID
      operationId: updateDoctor
      parameters:
        - name: doctor_id
          in: path
          description: ID врача
          required: true
          schema:
            type: integer
      requestBody:
        description: Объект с обновленными данными профиля врача
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
                name:
                  type: string
                  example: Иванов Иван Иванович
                  description: Новое имя доктора
                specialization:
                  type: string
                  example: Хирург
                  description: Новая специализация доктора
                image:
                  type: string
                  example: binary large object
                  description: Фотография врача
                description:
                  type: string
                  example: Описание
                  description: Описание
      responses:
        '200':
          description: Успешная операция. Возвращается обновленный профиль врача.
        '400':
          description: Ошибка доступа или некорректные данные запроса
  /admin/doctors/:
    summary: Все врачи
    description: Врачи
    get:
      tags:
        - admin
      summary: Админ-панель
      description: Получение информации о пользователях
      operationId: getAllDoctors
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/doctors'
            application/xml:
              schema:
                $ref: '#/components/schemas/doctors'
  /admin/numbers:
    summary: Номера
    description: Номера
    get:
      summary: get all numbers
      description: get all numbers
      operationId: getAllNumbers
      responses:
        '200':
          description: successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/numbers'
            application/xml:
              schema:
                $ref: '#/components/schemas/numbers'
      tags:
        - admin
  /admin/enrolls/:
    summary: all enrolls
    get:
      summary: get all enrolls
      description: get all enrolls
      operationId: getAllEnrolls
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enrolls'
            application/xml:
              schema:
                $ref: '#/components/schemas/enrolls'
      tags:
        - admin
  /admin/enrolls/{enroll_id}:
    delete:
      tags:
        - admin
      summary: Удаление записи к врачу по его ID
      operationId: deleteEnroll
      parameters:
        - name: enroll_id
          in: path
          description: ID записи
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
        '400':
          description: access denied
components:
  schemas:
    auth:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        first_name:
          type: string
          example: Michael
        last_name:
          type: string
          example: Nechaev
        telegram_id:
          type: integer
          format: int64
          example: 777777777
        telegram_username:
          type: string
          example: zuzazzo
        profile_picture:
          type: string
          example: https://t.me/i/userpic/320/q4lTN2ywpzeIyi7DZvbWR8e23guEPlQmKd0y6
        auth_date:
          type: integer
          format: int64
          example: 1703084266
        is_admin:
          type: integer
          format: int64
          example: 0
    user:
      type: object
      properties:
        telegram_id:
          type: integer
          format: int64
          example: 777777777
        first_name:
          type: string
          example: Michael
        is_admin:
          type: integer
          format: int64
          example: 0
    enrolls:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 77777777
        doctor_id:
          type: integer
          format: int64
          example: 3
        doctor_name:
          type: string
          example: Иванов Иван Иванович
        number:
          type: string
          example: 21.12.2023 15:00
        enroll_time:
          type: string
          example: 20.12.2023 18:40
        status:
          type: string
          example: Не принят
          description: Принят / Не принят
    doctors:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Иванов Иван Иванович
        specialization:
          type: string
          example: Невролог
    doctor:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Иванов Иван Иванович
        specialization:
          type: string
          example: Невролог
        description:
          type: string
          example: description sample
    addEnroll:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 7777777
        doctor_id:
          type: integer
          format: int64
          example: 3
        number:
          type: string
          example: 21.12.2023 15:00
    users:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        user_id:
          type: integer
          format: int64
          example: 777777777
        first_name:
          type: string
          example: Michael
        is_admin:
          type: integer
          format: int64
          example: 0
    numbers:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        number:
          type: string
          example: 21.12.2023 15:00
